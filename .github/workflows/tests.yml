name: Tests

on:
  push:
    branches: [main]
  pull_request:
  schedule:
    - cron: "15 1 * * *" # every day at 01:15
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  tests:
    name: ${{ matrix.session }} ${{ matrix.python }} / ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest"]
        python: ["3.9", "3.10", "3.11"]
        session: ["tests"]
        include:
          - { python: "3.10", os: "ubuntu-latest", session: "pre-commit" }

    env:
      NOXSESSION: ${{ matrix.session }}
      FORCE_COLOR: "1"
      PRE_COMMIT_COLOR: "always"

    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v4.7.1
        with:
          python-version: ${{ matrix.python }}

      - name: Upgrade pip
        run: |
          pip install -U pip
          pip --version

      - name: Install Nox
        run: |
          pip install nox
          nox --version

      - name: Compute pre-commit cache key
        if: matrix.session == 'pre-commit'
        id: pre-commit-cache
        shell: python
        run: |
          import hashlib
          import sys
          import os

          python = "py{}.{}".format(*sys.version_info[:2])
          payload = sys.version.encode() + sys.executable.encode()
          digest = hashlib.sha256(payload).hexdigest()
          result = f"${{ runner.os }}-{python}-{digest[:8]}-pre-commit"
          with open(os.getenv("GITHUB_OUTPUT"), "a") as fh:
              fh.write(f"name={result}")

      - name: Restore pre-commit cache
        uses: actions/cache@v3
        if: matrix.session == 'pre-commit'
        with:
          path: ~/.cache/pre-commit
          key: ${{ steps.pre-commit-cache.outputs.result }}-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: |
            ${{ steps.pre-commit-cache.outputs.result }}-

      - name: Run Nox
        run: |
          nox --python=${{ matrix.python }} --session ${{ matrix.session }}

      - name: Upload coverage report
        uses: codecov/codecov-action@v3.1.4
        if: always() && matrix.session == 'tests'
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
